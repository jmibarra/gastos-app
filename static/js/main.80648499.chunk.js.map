{"version":3,"sources":["utils/DateUtils.js","reducers/date.js","actions/date.js","contexts/Date.js","reducers/session.js","actions/session.js","contexts/Session.js","Components/Common/AvatarDropdow.js","Components/Common/Navbar.js","Components/Common/Footer.js","Components/creditCards/CreditCardForm.js","Components/Login/index.js","Components/Login/Login.js","Components/Signup/index.js","Components/Signup/Signup.js","firebase.js","utils/FirebaseUtils.js","Components/MonthMetrics/index.js","Components/MonthMetrics/MonthMetrics.js","Components/Common/StatusBadge.js","Components/ItemTable/Modals/Form/Form.js","Components/ItemTable/Modals/InsertModal.js","Components/ItemTable/Modals/EditModal.js","Components/ItemTable/index.js","Components/ItemTable/ItemTable.js","Components/DataPage/DataPage.js","Components/Common/NotFoundPage.js","Components/MainLayout/MainLayout.js","App.js","index.js"],"names":["DateUtils","Object","classCallCheck","this","getMonthName","month","parseInt","getCurrentYear","Date","getFullYear","getCurrentMonth","today","String","getMonth","padStart","initialState","year","month_name","dateReducer","state","action","type","payload","DateContext","createContext","Provider","DateProvider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","value","setDate","loggedIn","user","sessionReducer","SessionContext","SessionProvider","sessionState","Session_Provider","login","logout","AvatarDropdown","_useContext","useContext","_useState","useState","_useState2","dropdownOpen","setDropdownOpen","reactstrap_module","isOpen","toggle","prevState","tag","es","name","email","round","size","end","onClick","auth","getAuth","signOut","then","catch","error","console","NavBarComponent","props","setIsOpen","color","light","expand","Fragment","href","className","navbar","nav","inNavbar","caret","divider","outline","toogleCreditCardModal","index_esm","metricsOpen","toogleMetrics","AvatarDropdow","Footer","CreditCardForm","creditCardModalOpen","expiry","expiryyear","focus","alias","cvc","number","formData","setFormData","handleInputFocus","e","objectSpread","target","handleInputChange","_e$target","id","ele","document","getElementById","replace","defineProperty","fullscreen","react_credit_cards_es","locale","valid","placeholders","focused","htmlFor","onChange","_e$target3","newValue","onPaste","preventDefault","onKeyPress","_e$target2","length","onFocus","maxLength","spellCheck","autoComplete","data-ref","defaultChecked","log","LoginComponent","navigate","useNavigate","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","setError","_useState7","_useState8","errorCode","setErrorCode","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","onAuthStateChanged","onSubmit","signInWithEmailAndPassword","userCredential","message","code","for","placeholder","ev","currentTarget","SignupComponent","confirmPassword","setConfirmPassword","_useState11","_useState12","successMessage","setSuccessMessage","createUserWithEmailAndPassword","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseUtils","FirebaseUtils","_this","peticionPost","formItem","a√±o","mes","tipo","dbRef","ref","database","concat","push","peticionPut","itemRef","set","peticionDelete","window","confirm","motivo","remove","peticionGet","asyncToGenerator","regenerator_default","mark","_callee","response","snapshot","wrap","_context","prev","next","get","sent","exists","val","abrupt","stop","_x","_x2","_x3","apply","arguments","getDatabase","MonthMetricsComponent","incomes","setIncomes","expenses","setExpenses","CCExpenses","setCCExpenses","getTotalAmount","totalIncomes","keys","map","i","total","regularExpenses","creditCardExpenses","_fetchIncomesData","responseObject","_fetchExpensesData","_callee2","_context2","_fetchCCExpensesData","_callee3","_context3","fetchIncomesData","_x4","fetchExpensesData","_x5","_x6","fetchCCExpensesData","xs","sm","StatusBadgeComponent","estado","TCForm","handleChange","floating","required","fecha","InsertModalComponent","fecha_cierre","userUID","uid","setformItem","title","Form","closeModal","EditModalComponent","formItemId","ItemTableComponent","items","createModalOpen","setCreateModalOpen","editModalOpen","setEditModalOpen","setFormItem","setFormItemId","hover","key","StatusBadge","item","colSpan","InsertModal","EditModal","DataPage","Components_ItemTable","NotFoundPage","style","display","flexDirection","alignItems","justifyContent","height","fontSize","marginBottom","textAlign","backgroundColor","border","padding","borderRadius","marginTop","cursor","history","back","MainLayout","react_router_dist","path","element","Components_MonthMetrics","Components_DataPage_DataPage","Components_Signup","Components_Login","Common_NotFoundPage","App","setcreditCardModalOpen","setMetricsOpen","Date_DateProvider","Session_SessionProvider","fluid","Navbar","dist","Components_MainLayout_MainLayout","Common_Footer","creditCards_CreditCardForm","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.80648499.chunk.js","sourcesContent":["class DateUtils{\n\n    static getMonthName = (month) => {\n\n        let monthNames = [ \"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\" ];\n    \n        let monthName = monthNames[parseInt(month,10)-1] //Al ser un array enero es el 0 por eso al numero de mes se le resta 1.\n    \n        return monthName\n    }\n\n    static getCurrentYear = () => {\n        let today = new Date();\n        let yyyy = today.getFullYear();\n        return yyyy;\n\n    }\n\n    static getCurrentMonth = () => {\n        var today = new Date();\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        return mm;\n    }\n\n}\n\nexport default DateUtils;","import DateUtils from \"../utils/DateUtils\"\nimport { SET_DATE } from \"../actions/date\"\n\nexport const initialState = {\n    year: DateUtils.getCurrentYear(),\n    month: DateUtils.getCurrentMonth(),\n    month_name: DateUtils.getMonthName(DateUtils.getCurrentMonth())\n}\n\nexport const dateReducer = (state, action) => {\n    switch (action.type) {\n        case SET_DATE: {\n            return {\n                year: action.payload.year,\n                month: action.payload.month,\n                month_name: DateUtils.getMonthName(action.payload.month)\n            };\n        }\n        default:\n            return state\n    }\n}","export const SET_DATE = \"SET_DATE\"","import React, { createContext, useReducer } from \"react\";\nimport { SET_DATE } from \"../actions/date\";\nimport { dateReducer,initialState } from \"../reducers/date\";\n\nexport const DateContext = createContext();\n\nconst { Provider } = DateContext;\n\nexport const DateProvider = ({ children }) => {\n    \n    const [state,dispatch] = useReducer(dateReducer,initialState);\n\n    const setDate = (year, month) => {\n        dispatch({type:SET_DATE, payload: {year:year, month: month}})\n    }\n\n    return <Provider value={{ state, setDate}}> {children}</Provider>\n\n}","import { LOG_IN,LOG_OUT } from \"../actions/session\";\n\nexport const initialState = {\n    loggedIn: false,\n    user: {} \n}\n\nexport const sessionReducer = (state, action) => {\n    switch (action.type) {\n        case LOG_IN: {\n            return {\n                user: action.payload.user,\n                loggedIn: action.payload.loggedIn\n            };\n        }\n        case LOG_OUT: {\n            return {\n                \n            }\n        }\n        default:\n            return state\n    }\n}","export const LOG_IN = \"LOG_IN\"\nexport const LOG_OUT = \"LOG_OUT\"","import React, { createContext, useReducer } from \"react\";\nimport {LOG_IN, LOG_OUT} from \"../actions/session\";\nimport { sessionReducer,initialState } from \"../reducers/session\";\n\nexport const SessionContext = createContext();\n\nconst { Provider } = SessionContext;\n\nexport const SessionProvider = ({ children }) => {\n    \n    const [sessionState,dispatch] = useReducer(sessionReducer,initialState);\n\n    const login = (user) => {\n        dispatch({type:LOG_IN, payload: {loggedIn:true, user: user}})\n    }\n\n    const logout = () => {\n        dispatch({type:LOG_OUT, payload: {loggedIn:false, user: {}}})\n    }\n\n    return <Provider value={{ sessionState, login,logout}}> {children}</Provider>\n\n}","import React, { useState, useContext } from 'react';\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport Avatar from 'react-avatar';\nimport { SessionContext } from '../../contexts/Session';\nimport { getAuth, signOut } from \"firebase/auth\";\n\n\nconst AvatarDropdown = () => {\n    const { sessionState, logout } = useContext(SessionContext);\n    \n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n\n    const handleLogout = () => {\n        const auth = getAuth();\n        signOut(auth)\n          .then(() => {\n            logout();\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      };\n\n    return (\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n            <DropdownToggle tag=\"span\">\n                <Avatar name={sessionState.user.email} round={true} size=\"60\" />\n            </DropdownToggle>\n            <DropdownMenu end>\n                <DropdownItem onClick={handleLogout}>\n                    Logout\n                </DropdownItem>\n            </DropdownMenu>\n        </Dropdown>\n    );\n}\n\nexport default AvatarDropdown;\n","import React, { useContext, useState } from 'react';\nimport Avatar from 'react-avatar';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n  Dropdown\n} from 'reactstrap';\nimport {AiFillSignal,AiOutlineCreditCard } from 'react-icons/ai';\nimport { DateContext } from '../../contexts/Date';\nimport { SessionContext } from '../../contexts/Session';\nimport AvatarDropdown from './AvatarDropdow';\n\nconst NavBarComponent = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    const { state, setDate } = useContext(DateContext)\n  \n    const { sessionState} = useContext(SessionContext)\n\n  return (\n    <div>   \n        <Navbar color=\"light\" light expand=\"md\">\n            {sessionState.loggedIn && (\n            <>\n                <NavbarBrand href=\"/\">Gastos {state.month_name} {state.year} </NavbarBrand>\n                <NavbarToggler className=\"me-2\" onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"me-auto\" navbar>\n                        <UncontrolledDropdown nav inNavbar>\n                        <DropdownToggle nav caret>\n                            A√±o\n                        </DropdownToggle>\n                        <DropdownMenu end>\n                            <DropdownItem  onClick={()=>setDate('2021',state.month)}>\n                            2021\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate('2022',state.month)}>\n                            2022\n                            </DropdownItem>\n                            <DropdownItem divider />\n                            <DropdownItem>\n                            Agregar a√±o\n                            </DropdownItem>\n                        </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>\n                                Mes\n                            </DropdownToggle>\n                            <DropdownMenu end>\n                            <DropdownItem onClick={()=>setDate(state.year,'01')}>\n                                Enero\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'02')}>\n                                Febrero\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'03')}>\n                                Marzo\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'04')}>\n                                Abril\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'05')}>\n                                Mayo\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'06')}>\n                                Junio\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'07')}>\n                                Julio\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'08')}>\n                                Agosto\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'09')}>\n                                Septiembre\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'10')}>\n                                Octubre\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'11')}>\n                                Noviembre\n                            </DropdownItem>\n                            <DropdownItem onClick={()=>setDate(state.year,'12')}>\n                                Diciembre\n                            </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                    <Button outline={true} onClick={props.toogleCreditCardModal}><AiOutlineCreditCard /> Tarjeta de cr√©dito</Button>\n                    <Button outline={props.metricsOpen} onClick={props.toogleMetrics}><AiFillSignal /> Metricas</Button>\n                    <AvatarDropdown/>\n                </Collapse>\n            </>)}\n            {!sessionState.loggedIn && (\n            <>\n                <NavbarBrand href=\"/\">Gastos</NavbarBrand>\n                <Avatar name=\"\" round={true} size=\"60\" />\n\n            </>\n            )}\n        </Navbar>\n    </div>\n  );\n}\n\nexport default NavBarComponent;\n","import React from 'react'\nimport { CardFooter } from 'reactstrap'\n\nconst Footer = () => {\n  return (\n    <>\n        <CardFooter className=\"text-muted\">\n            Footer\n        </CardFooter>\n    </>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react'\nimport Cards from \"react-credit-cards\";\nimport \"./css/credit-card.css\";\nimport \"./css/form-style.css\";\nimport { \n    Modal, \n    ModalBody, \n    ModalHeader, \n    ModalFooter,\n} from \"reactstrap\";\n\nconst CreditCardForm = ({creditCardModalOpen,toogleCreditCardModal}) => {\n\n    const [formData,setFormData] = useState(\n        {\n            expiry: \"\",\n            expiryyear: \"\",\n            focus: \"\",\n            alias: \"\",\n            cvc:\"\",\n            number: \"\"\n        }\n    )\n\n    const handleInputFocus = (e) => {\n        setFormData({\n            ...formData,\n            focus: e.target.name\n          })\n    };\n\n    //function to handle  input and update the state of variable\n    const handleInputChange = (e) => {\n        const { name, id, value } = e.target;\n\n        \n\n        if (id === \"cardHolder\") {\n            var ele = document.getElementById(id);\n            //if user enters any invalid characters it gets replaced\n            ele.value = ele.value.replace(\n                /[}\"`~_=.\\->\\]|<?+*/,\\d;[:{\\\\!@#/'$%^&*()]/g, \n                \"\"\n            );\n            setFormData({\n                ...formData,\n                [name]: ele.value\n            })\n\n        } else{\n            setFormData({\n                ...formData,\n                [name]: value\n            })\n        }\n    };\n\n    const addSpace = (e) => {\n        const { value, id } = e.target;\n        var ele = document.getElementById(id);\n        if (value.length === 4 || value.length === 9 || value.length === 14)\n          ele.value = ele.value.replace(/\\W/gi, \"\").replace(/(.{4})/g, \"$1 \");\n    };\n\n    const  validateInput = (e) => {\n        const { name, value} = e.target;\n    \n          //if user enters any invalid characters it gets replaced\n          let newValue = value.replace(\n            /[A-Za-z}\"`~_=.\\->\\]|<?+*/,;[:{\\\\!@#/'$%^&*()]/g,\n            \"\"\n          );\n          setFormData({\n            ...formData,\n            [name]: newValue\n          })\n        \n      };\n\n    const insertCreditCard = () => {\n        console.log(formData)\n    }\n    \n    return (\n        <>\n            <Modal isOpen={creditCardModalOpen} fullscreen=\"lg\" size=\"lg\">\n                <ModalHeader>Crear nueva tarjeta</ModalHeader>\n                <ModalBody>\n                    <div className=\"credit-card \">\n                        <Cards\n                            locale={{ valid: \"Expira\" }}\n                            placeholders={{ name: \"ALIAS TC\" }}\n                            cvc={formData.cvc}\n                            expiry={formData.expiry+\"/\"+formData.expiryyear}\n                            focused={formData.focus}\n                            name={formData.alias}\n                            number={formData.number}\n                        />\n                    </div>\n                    <div className=\"card\">\n                        <form className=\"payment-form\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"cardNumber\" className=\"card-label\">\n                                    N√∫mero\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    onChange={validateInput}\n                                    value={formData.number}\n                                    onPaste={(e) => e.preventDefault()}\n                                    onKeyPress={addSpace}\n                                    onFocus={handleInputFocus}\n                                    name=\"number\"\n                                    maxLength=\"19\"\n                                    id=\"cardNumber\"\n                                    className=\"form-control form-control-lg\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                            <label htmlFor=\"cardHolder\" className=\"card-label\">\n                                Alias\n                            </label>\n                            <input\n                                type=\"text\"\n                                name=\"alias\"\n                                spellCheck=\"false\"\n                                value={formData.alias}\n                                maxLength=\"20\"\n                                autoComplete=\"off\"\n                                onPaste={(e) => e.preventDefault()}\n                                onChange={handleInputChange}\n                                onFocus={handleInputFocus}\n                                id=\"cardHolder\"\n                                className=\"form-control form-control-lg\"\n                            />\n                            </div>\n                            <div className=\"expiry-class\">\n                                <div className=\"form-group card-month \">\n                                    <label htmlFor=\"cardMonth\" className=\"card-label\">\n                                        Vencimiento\n                                    </label>\n                                    <select\n                                        id=\"cardMonth\"\n                                        data-ref=\"cardDate\"\n                                        value={formData.expiry}\n                                        name=\"expiry\"\n                                        onChange={handleInputChange}\n                                        onFocus={handleInputFocus}\n                                        className=\"form-control form-control-lg\"\n                                    >\n                                        <option value=\"\" defaultChecked=\"true\">\n                                        Mes\n                                        </option>\n                                        <option value=\"01\">01</option>\n                                        <option value=\"02\">02</option>\n                                        <option value=\"03\">03</option>\n                                        <option value=\"04\">04</option>\n                                        <option value=\"05\">05</option>\n                                        <option value=\"06\">06</option>\n                                        <option value=\"07\">07</option>\n                                        <option value=\"08\">08</option>\n                                        <option value=\"09\">09</option>\n                                        <option value=\"10\">10</option>\n                                        <option value=\"11\">11</option>\n                                        <option value=\"12\">12</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group card-year\">\n                                    <select\n                                        id=\"cardYear\"\n                                        data-ref=\"cardDate\"\n                                        value={formData.expiryyear}\n                                        name=\"expiryyear\"\n                                        onChange={handleInputChange}\n                                        onFocus={handleInputFocus}\n                                        className=\"form-control form-control-lg\"\n                                    >\n                                        <option value=\"\" defaultChecked=\"true\">\n                                        A√±o\n                                        </option>\n                                        <option value=\"2020\">2020</option>\n                                        <option value=\"2021\">2021</option>\n                                        <option value=\"2022\">2022</option>\n                                        <option value=\"2023\">2023</option>\n                                        <option value=\"2024\">2024</option>\n                                        <option value=\"2025\">2025</option>\n                                        <option value=\"2026\">2026</option>\n                                        <option value=\"2027\">2027</option>\n                                        <option value=\"2028\">2028</option>\n                                        <option value=\"2029\">2029</option>\n                                        <option value=\"2030\">2030</option>\n                                        <option value=\"2031\">2031</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <button className=\"btn btn-primary\" onClick={() => insertCreditCard() }>Crear</button>{\"   \"}\n                    <button className=\"btn btn-danger\" onClick={() => toogleCreditCardModal() } >Cancelar</button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nexport default CreditCardForm","import LoginComponent from \"./Login\";\n\nexport default LoginComponent","import React, {useState, useEffect, useContext} from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Alert\n  } from \"reactstrap\";\n\nimport { getAuth, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { SessionContext } from '../../contexts/Session';\n\nconst LoginComponent = () => {\n\n    const auth = getAuth();\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(false);\n    const [errorCode, setErrorCode] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const { sessionState, login} = useContext(SessionContext)\n\n    useEffect(()=>{\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n              // User is signed in, see docs for a list of available properties\n              // https://firebase.google.com/docs/reference/js/firebase.User\n              login(user);\n              navigate(\"/\")\n            } else {\n              console.log(\"user is logged out\")\n              \n            }\n          });\n         \n    }, [])\n       \n    const onLogin = (e) => {\n        e.preventDefault();\n        signInWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            // Signed in\n            login(userCredential.user);\n            //localStorage.setItem('user', JSON.stringify(userCredential.user))\n            navigate(\"/\")\n        })\n        .catch((error) => {\n            setError(true);\n            setErrorMessage(error.message);\n            setErrorCode(error.code)\n        });\n       \n    }\n \n    return(\n        <Container>\n            <Row>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <Form onSubmit={onLogin}>\n                                <FormGroup className=\"pb-2 mr-sm-2 mb-sm-0\">\n                                <Label for=\"exampleEmail\" className=\"mr-sm-2\">\n                                    Email\n                                </Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"exampleEmail\"\n                                    placeholder=\"something@idk.cool\"\n                                    onChange={(ev) => setEmail(ev.currentTarget.value)}\n                                />\n                                </FormGroup>\n                                <FormGroup className=\"pb-2 mr-sm-2 mb-sm-0\">\n                                <Label for=\"examplePassword\" className=\"mr-sm-2\">\n                                    Password\n                                </Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"examplePassword\"\n                                    placeholder=\"don't tell!\"\n                                    onChange={(ev) => setPassword(ev.currentTarget.value)}\n                                />\n                                </FormGroup>\n                                <Button type=\"submit\" color=\"primary\">\n                                Login\n                                </Button>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                    {error && (\n                        <Card className=\"mt-5\">\n                            <CardBody>\n                                <Alert color=\"danger\">\n                                    { errorCode === \"auth/user-not-found\" ? \n                                        (<p>El usuario ingresado no existe, puede registrarte <a href='/signup'>aqu√≠</a></p>) : \n                                        errorMessage}\n                                </Alert>\n                            </CardBody>\n                        </Card>\n                    )}\n\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default LoginComponent\n\n","import SignupComponent from \"./Signup\";\n\nexport default SignupComponent","import React, {useState, useEffect, useContext} from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Toast,\n    ToastBody,\n    ToastHeader,\n    Alert\n} from \"reactstrap\";\nimport { getAuth, createUserWithEmailAndPassword,onAuthStateChanged } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\nimport { SessionContext } from '../../contexts/Session';\n\nconst SignupComponent = () => {\n\n    const auth = getAuth();\n    const navigate = useNavigate();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    \n    const { login } = useContext(SessionContext);\n\n    useEffect(()=>{\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n              login(user);\n              navigate(\"/\")\n            } else {\n              console.log(\"user is logged out\") \n            }\n          });\n         \n    }, [])\n\n    const onSignup = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            createUserWithEmailAndPassword(auth, email, password)\n                .then((userCredential) => {\n                    // Signed up\n                    login(userCredential.user);\n                    setSuccessMessage(\"Account created successfully!\");\n                    navigate(\"/\");\n                })\n                .catch((error) => {\n                    const errorCode = error.code;\n                    const errorMessage = error.message;\n                    setError(true);\n                    setErrorMessage(errorMessage);\n                });\n        } else {\n            setError(true);\n            setErrorMessage(\"Passwords do not match!\");\n        }\n    }\n\n    return(\n        <Container>\n            <Row>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            {successMessage && \n                                <Toast className=\"mb-4\">\n                                    <ToastHeader>\n                                        Success\n                                    </ToastHeader>\n                                    <ToastBody>\n                                        {successMessage}\n                                    </ToastBody>\n                                </Toast>\n                            }\n                            <Form onSubmit={onSignup}>\n                                <FormGroup className=\"pb-2 mr-sm-2 mb-sm-0\">\n                                    <Label for=\"exampleEmail\" className=\"mr-sm-2\">\n                                        Email\n                                    </Label>\n                                    <Input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"exampleEmail\"\n                                        placeholder=\"something@idk.cool\"\n                                        onChange={(ev) => setEmail(ev.currentTarget.value)}\n                                    />\n                                </FormGroup>\n                                <FormGroup className=\"pb-2 mr-sm-2 mb-sm-0\">\n                                    <Label for=\"examplePassword\" className=\"mr-sm-2\">\n                                        Password\n                                    </Label>\n                                    <Input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"examplePassword\"\n                                        placeholder=\"don't tell!\"\n                                        onChange={(ev) => setPassword(ev.currentTarget.value)}\n                                    />\n                                </FormGroup>\n                                <FormGroup className=\"pb-2 mr-sm-2 mb-sm-0\">\n                                    <Label for=\"exampleConfirmPassword\" className=\"mr-sm-2\">\n                                        Confirm Password\n                                    </Label>\n                                    <Input\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        id=\"exampleConfirmPassword\"\n                                        placeholder=\"confirm password\"\n                                        onChange={(ev) => setConfirmPassword(ev.currentTarget.value)}\n                                    />\n                                </FormGroup>\n                                <Button type=\"submit\" color=\"primary\">\n                                    Signup\n                                </Button>\n                            </Form>\n                            {error && \n                                <Alert color=\"danger\" className=\"mt-3\">\n                                    {errorMessage}\n                                </Alert>\n                            }\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default SignupComponent\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth'\n\n// Configura tus credenciales de Firebase\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCl6Cum-zKYBZbw-68bRUr1_yyIZv_2Lck\",\n\tauthDomain: \"gastos-2b065.firebaseapp.com\",\n\tdatabaseURL: \"https://gastos-2b065-default-rtdb.firebaseio.com\",\n\tprojectId: \"gastos-2b065\",\n\tstorageBucket: \"gastos-2b065.appspot.com\",\n\tmessagingSenderId: \"683135440178\",\n\tappId: \"1:683135440178:web:ac212a786cd2f12927b32b\"\n};\n\n// Inicializa Firebase con la configuraci√≥n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase¬†\n\n","import firebase from '../firebase'\nimport { getDatabase, ref, get, set, remove, push } from 'firebase/database';\nimport 'firebase/compat/database';\n\nclass FirebaseUtils {\n  constructor() {\n    // Crea una instancia de la base de datos de Firebase\n    this.database = getDatabase();\n  }\n\n  // Agrega un elemento a la base de datos de Firebase\n  peticionPost = (formItem, a√±o, mes, tipo) => {\n    // Obtiene una referencia a la ubicaci√≥n en la base de datos donde se va a agregar el elemento\n    const dbRef = ref(this.database, `${tipo}/${a√±o}/${mes}`);\n    // Agrega el elemento a la base de datos\n    push(dbRef, formItem).then(() => {\n      console.log('Item agregado exitosamente');\n    }).catch((error) => {\n      console.log('Error al agregar item', error);\n    });\n  };\n\n  // Actualiza un elemento existente en la base de datos de Firebase\n  peticionPut = (formItem, a√±o, mes, tipo, id) => {\n    // Obtiene una referencia al elemento que se va a actualizar\n    const itemRef = ref(this.database, `${tipo}/${a√±o}/${mes}/${id}`);\n    // Actualiza el elemento en la base de datos\n    set(itemRef, formItem)\n      .then(() => {\n        console.log(\"Item actualizado correctamente\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // Elimina un elemento existente en la base de datos de Firebase\n  peticionDelete = (formItem, a√±o, mes, tipo, id) => {\n    // Solicita la confirmaci√≥n del usuario para eliminar el elemento\n    if (\n      window.confirm(\n        `Est√°s seguro que deseas eliminar el elemento ${\n          formItem && formItem.motivo\n        }?`\n      )\n    ) {\n      // Obtiene una referencia al elemento que se va a eliminar\n      const dbRef = ref(this.database, `${tipo}/${a√±o}/${mes}/${id}`);\n      // Elimina el elemento de la base de datos\n      remove(dbRef).catch((error) => {\n        console.log(error);\n      });\n    }\n  };\n\n  // Obtiene los elementos existentes en la base de datos de Firebase\n  peticionGet = async (a√±o, mes, tipo) => {\n    // Inicializa la respuesta como un arreglo vac√≠o\n    let response = [];\n    // Obtiene los datos de la ubicaci√≥n especificada en la base de datos\n    const snapshot = await get(ref(this.database, `${tipo}/${a√±o}/${mes}`));\n    // Si los datos existen, los asigna a la respuesta\n    if (snapshot.exists()) {\n      response = snapshot.val();\n    }\n    // Devuelve la respuesta\n    return response;\n  };\n}\n\n// Crea una instancia de la clase FirebaseUtils y la exporta\nconst firebaseUtils = new FirebaseUtils();\nexport default firebaseUtils;\n","import MonthMetricsComponent from \"./MonthMetrics\";\n\nexport default MonthMetricsComponent;","import React, { useContext, useEffect, useState } from \"react\";\nimport { DateContext } from \"../../contexts/Date\";\n\nimport { Col,Collapse,Row,Toast, ToastBody, ToastHeader} from \"reactstrap\"\nimport { AiFillCreditCard,AiFillDollarCircle } from 'react-icons/ai';\nimport firebaseUtils from \"../../utils/FirebaseUtils\";\nimport { SessionContext } from \"../../contexts/Session\";\n\nconst MonthMetricsComponent = (props) => {\n\n    const { state } = useContext(DateContext);\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [CCExpenses, setCCExpenses] = useState([]);\n\n    const { sessionState} = useContext(SessionContext)\n    \n    const getTotalAmount = (incomes) => {\n        let totalIncomes = 0;\n        if (Object.keys(incomes).length > 0) {\n            Object.keys(incomes).map(i => {\n                totalIncomes += parseInt(incomes[i].total);\n            })\n        }\n        return totalIncomes;\n    };\n\n    const totalIncomes = getTotalAmount(incomes);\n    const regularExpenses = getTotalAmount(expenses);\n    const creditCardExpenses = getTotalAmount(CCExpenses);\n\n    useEffect(()=> {\n        fetchIncomesData(state.year,state.month);\n    },[incomes,state.year,state.month]);\n\n    useEffect(()=> {\n        fetchExpensesData(state.year,state.month)\n    },[expenses,state.year,state.month]);\n\n    useEffect(()=> {\n        fetchCCExpensesData(state.year,state.month)\n    },[CCExpenses,state.year,state.month]);\n\n    async function fetchIncomesData(year,month){\n        const responseObject = await firebaseUtils.peticionGet(year,month,\"ingresos\");\n        if(responseObject)\n            setIncomes(responseObject)\n    }\n\n    async function fetchExpensesData(year,month){\n        let responseObject = await firebaseUtils.peticionGet(year,month,\"gastos\");\n        if(responseObject)\n            setExpenses(responseObject)\n    }\n\n    async function fetchCCExpensesData(year,month){\n        let responseObject = await firebaseUtils.peticionGet(year,month,\"tc\");\n        if(responseObject)\n            setCCExpenses(responseObject)\n    }\n\n    return( \n        <>\n        {sessionState.loggedIn && (\n            <Collapse isOpen={props.metricsOpen}>\n                <Row className=\"p-3 bg-dark my-2 rounded\">\n                    <Col xs=\"6\" sm=\"4\">\n                        <Toast>\n                            <ToastHeader>\n                                <h3>Ingresos</h3>\n                            </ToastHeader>\n                            <ToastBody>\n                                <h3><AiFillDollarCircle/> {totalIncomes}</h3>\n                            </ToastBody>\n                        </Toast>\n                    </Col>\n                    <Col xs=\"6\" sm=\"4\">\n                        <Toast>\n                            <ToastHeader>\n                                <h3> Gastos </h3>\n                            </ToastHeader>\n                            <ToastBody>\n                                <h3> <AiFillDollarCircle/>  {regularExpenses}</h3> <br/>\n                                <h3><AiFillCreditCard/> {creditCardExpenses} </h3>\n                                <hr></hr>\n                                <h3> <AiFillDollarCircle/> {regularExpenses + creditCardExpenses} </h3>\n                            </ToastBody>\n                        </Toast>\n                    </Col>\n                    <Col xs=\"6\" sm=\"4\">\n                        <Toast>\n                            <ToastHeader>\n                                <h3>Sobrante</h3>\n                            </ToastHeader>\n                            <ToastBody>\n                            <h3> <AiFillDollarCircle/>{totalIncomes - (regularExpenses + creditCardExpenses)} </h3>\n                            </ToastBody>\n                        </Toast>\n                        <Toast>\n                            <ToastHeader>\n                                <h3>Ahorros</h3>\n                            </ToastHeader>\n                            <ToastBody>\n                            <h3> <AiFillDollarCircle/> </h3>\n                            </ToastBody>\n                        </Toast>\n                    </Col>  \n                </Row>\n            </Collapse>\n        )}\n        </>\n    );\n}\n\nexport default MonthMetricsComponent;\n\n","import React from 'react';\nimport { Badge } from \"reactstrap\";\n\nconst StatusBadgeComponent = (props) => {\n    switch (props.estado) {\n        case \"Pendiente\":   return <Badge color=\"secondary\">{props.estado}</Badge>;\n        case \"Estimado\": return <Badge color=\"warning\">{props.estado}</Badge>;\n        case \"Pago\":  return <Badge color=\"success\">{props.estado}</Badge>;\n        default:      return <Badge color=\"primary\">{props.estado}</Badge>;\n    }\n}\n\nexport default StatusBadgeComponent;\n","import React from 'react';\nimport { \n    Form,\n    FormGroup, \n    Label, \n    Input,\n    InputGroup, \n    InputGroupText \n\n} from \"reactstrap\";\n\nconst TCForm = ({handleChange,formItem}) => {\n  return (\n    <>\n        <Form>\n            <FormGroup floating>\n                <Input\n                    id=\"motivo\"\n                    name=\"motivo\"\n                    placeholder=\"Motivo\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    value={formItem && formItem.motivo}\n                    required\n                />\n                <Label for=\"motivo\">\n                    Motivo\n                </Label>\n            </FormGroup>\n            <FormGroup floating>\n                <Input\n                    id=\"fecha\"\n                    name=\"fecha\"\n                    placeholder=\"date placeholder\"\n                    type=\"date\"\n                    value={formItem && formItem.fecha}\n                    onChange={handleChange}\n                />\n                <Label for=\"fecha\">\n                    Fecha\n                </Label>\n            </FormGroup>\n            <FormGroup floating>\n                <Label for=\"total\">\n                    Total\n                </Label>\n                <InputGroup>\n                    <InputGroupText>$</InputGroupText>\n                    <Input\n                        id=\"total\"\n                        name=\"total\"\n                        type=\"text\"\n                        placeholder='Total'\n                        value={formItem && formItem.total}\n                        onChange={handleChange}\n                    />\n                </InputGroup>\n\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"estado\">\n                    Estado\n                </Label>\n                <Input\n                id=\"estado\"\n                name=\"estado\"\n                type=\"select\"\n                value={formItem && formItem.estado}\n                onChange={handleChange}\n                >\n                    <option>\n                        Estimado\n                    </option>\n                    <option>\n                        Pendiente\n                    </option>\n                    <option>\n                        Pago\n                    </option>\n                </Input>\n\n            </FormGroup>\n        </Form>\n    </>\n  )\n}\n\nexport default TCForm","import React, {useState,useContext} from 'react';\n\nimport firebaseUtils from '../../../utils/FirebaseUtils';\nimport { \n    Modal, \n    ModalBody, \n    ModalHeader, \n    ModalFooter,\n} from \"reactstrap\";\nimport Form from \"./Form/Form.js\"\n\nimport { SessionContext } from '../../../contexts/Session';\n\n\nconst InsertModalComponent = (props) => {\n\n    const { sessionState } = useContext(SessionContext)\n\n    const [formItem, setformItem] = useState({\n        motivo: '',\n        fecha: '',\n        fecha_cierre: '',\n        total: '',\n        estado: 'Estimado',\n        userUID: sessionState.loggedIn ? sessionState.user.uid : \"\"\n      });\n    \n        \n    const handleChange=e=>{\n        setformItem({\n            ...formItem,\n            [e.target.name]: e.target.value\n        })\n    }\n        \n    const doPost = () => {\n        firebaseUtils.peticionPost(formItem,props.year,props.month,props.tipo)\n        props.closeModal();\n        \n    }\n\n    return(\n        <Modal isOpen={props.isOpen}>\n            <ModalHeader>{props.title}</ModalHeader>\n            <ModalBody>\n                <Form handleChange={handleChange}/>\n            </ModalBody>\n            <ModalFooter>\n              <button className=\"btn btn-primary\" onClick={()=>doPost(props.tipo)}>Insertar</button>{\"   \"}\n              <button className=\"btn btn-danger\" onClick={()=>props.closeModal()}>Cancelar</button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default InsertModalComponent;","import React from 'react';\nimport { \n    Modal, \n    ModalBody, \n    ModalHeader, \n    ModalFooter,\n} from \"reactstrap\";\nimport Form from \"./Form/Form.js\"\nimport firebaseUtils from \"../../../utils/FirebaseUtils\";\n\n\nconst EditModalComponent = (props) => {\n\n    const updateItem = () => {\n        firebaseUtils.peticionPut(props.formItem,props.year,props.month,props.tipo,props.formItemId);\n        props.closeModal();\n    }\n\n    return(\n        <Modal isOpen={props.isOpen}>\n            <ModalHeader>Editar Registro</ModalHeader>\n            <ModalBody>\n                <Form handleChange={props.handleChange} formItem={props.formItem} />\n            </ModalBody>\n            <ModalFooter>\n                <button className=\"btn btn-primary\" onClick={()=>updateItem()}>Editar</button>{\"   \"}\n                <button className=\"btn btn-danger\" onClick={()=>props.closeModal()}>Cancelar</button>\n            </ModalFooter>\n        </Modal>\n    )\n\n}\n\nexport default EditModalComponent;\n\n\n\n    \n","import ItemTableComponent from \"./ItemTable\";\n\nexport default ItemTableComponent;","import React, {useContext, useState} from 'react';\nimport { Table,ButtonGroup } from 'reactstrap';\nimport {AiFillEdit,AiFillCloseCircle } from 'react-icons/ai';\n\nimport StatusBadgeComponent from '../Common/StatusBadge.js';\nimport InsertModalComponent from './Modals/InsertModal.js';\nimport EditModalComponent from './Modals/EditModal.js';\nimport firebaseUtils from '../../utils/FirebaseUtils.js'\nimport { DateContext } from '../../contexts/Date.js';\n\nconst ItemTableComponent = ({items,type}) => {\n\n    const { state } = useContext(DateContext);\n\n    const [createModalOpen,setCreateModalOpen] = useState(false);\n    const [editModalOpen,setEditModalOpen] = useState(false);\n    const [formItem,setFormItem] = useState();\n    const [formItemId,setFormItemId] = useState();\n\n    const closeModal = () => {\n        setCreateModalOpen(false);\n        setEditModalOpen(false);\n    }\n\n    const deleteItem = (item,id) => {\n        firebaseUtils.peticionDelete(item,state.year,state.month,type,id)\n    }\n\n    const updateItemModal = (item,id) => {\n        setFormItem(item);\n        setFormItemId(id);\n        setEditModalOpen(true);\n    };\n\n    const handleUpdateChange=e=>{\n        setFormItem({\n            ...formItem,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return(\n        <>\n            <Table hover>\n                <thead>\n                    <tr>\n                        <th>Motivo</th>\n                        <th>Fecha</th>\n                        <th>Importe</th>\n                        <th>Estado</th>\n                        <th>Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(items).map(i=>{\n                    return <tr key={i}>\n                        <td>{items[i].motivo}</td>\n                        <td>{items[i].fecha}</td>\n                        <td>$ {items[i].total}</td>\n                        <td><StatusBadgeComponent estado={items[i].estado}/></td>\n                        <td>\n                            <ButtonGroup>\n                                <button className=\"btn btn-primary\" onClick={()=>updateItemModal(items[i],i)}> <AiFillEdit /></button> {\"   \"}\n                                <button className=\"btn btn-danger\" onClick={()=>deleteItem(items[i],i)}><AiFillCloseCircle/></button>\n                            </ButtonGroup>\n                        </td>\n                    </tr>\n                    })}\n                    <tr><td colSpan=\"7\"><button type=\"button\" className=\"btn btn-link btn-sm\" onClick={()=>setCreateModalOpen(true)}>Nuevos {type}</button></td></tr>\n                </tbody>\n            </Table>\n             <InsertModalComponent \n                isOpen={createModalOpen} \n                title={\"Insertar \"+type} \n                tipo={type} \n                year={state.year} \n                month={state.month} \n                closeModal={closeModal} \n            />\n            \n            <EditModalComponent \n                isOpen={editModalOpen} \n                formItem={formItem} \n                formItemId={formItemId} \n                tipo={type} \n                year={state.year} \n                month={state.month} \n                handleChange={handleUpdateChange}\n                closeModal={closeModal} \n            />\n        </>\n        \n    )\n}\n\nexport default ItemTableComponent;\n","import React, {useState,useEffect, useContext} from 'react'\nimport { \n    Col,\n    Container,\n    Row,\n} from \"reactstrap\"\nimport ItemTableComponent from '../ItemTable'\nimport ItemTCTableComponent from '../ItemTCTable'\nimport firebaseUtils from '../../utils/FirebaseUtils.js'\nimport { DateContext } from '../../contexts/Date'\nimport { SessionContext } from '../../contexts/Session'\n\nconst DataPage = () => {\n\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [CCExpenses, setCCExpenses] = useState([]);\n\n    const { state } = useContext(DateContext);\n\n    const { sessionState} = useContext(SessionContext)\n\n    useEffect(()=> {\n        fetchIncomesData(state.year,state.month);\n    },[incomes,state.year,state.month]);\n\n    useEffect(()=> {\n        fetchExpensesData(state.year,state.month)\n    },[expenses,state.year,state.month]);\n\n    useEffect(()=> {\n        fetchCCExpensesData(state.year,state.month)\n    },[CCExpenses,state.year,state.month]);\n\n    async function fetchIncomesData(year,month){\n        const responseObject = await firebaseUtils.peticionGet(year,month,\"ingresos\");\n        if(responseObject)\n            setIncomes(responseObject)\n    }\n\n    async function fetchExpensesData(year,month){\n        let responseObject = await firebaseUtils.peticionGet(year,month,\"gastos\");\n        if(responseObject)\n            setExpenses(responseObject)\n    }\n\n    async function fetchCCExpensesData(year,month){\n        let responseObject = await firebaseUtils.peticionGet(year,month,\"tc\");\n        if(responseObject)\n            setCCExpenses(responseObject)\n    }\n\n    return (\n        <>\n        {sessionState.loggedIn && (\n            <Container>\n                <Row xs=\"2\"> \n                    <Col>\n                        <h1>Ingresos</h1>\n                        <ItemTableComponent items={incomes} type=\"ingresos\"/>\n                    </Col>\n                    <Col>\n                        <h1>Gastos</h1>\n                        <ItemTableComponent items={expenses} type=\"gastos\"/>\n                    </Col>          \n                </Row>\n                {/* <Row>\n                    <h1>Gastos Tarjeta de cr√©dito</h1>\n                    <ItemTCTableComponent items={CCExpenses} type=\"tc\"/>\n                </Row> */}\n            </Container>\n        )}\n        </>\n    )\n}\n\nexport default DataPage","import React from 'react';\n\nconst NotFoundPage = () => {\n  return (\n    <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'center', \n        height: '100vh' \n      }}>\n      <h1 style={{ fontSize: '5rem', marginBottom: '2rem' }}>404</h1>\n      <p style={{ fontSize: '1.5rem', textAlign: 'center' }}>\n        Oops! La p√°gina que est√°s buscando no existe.\n      </p>\n      <button \n        style={{ \n          backgroundColor: '#007bff', \n          color: 'white', \n          border: 'none', \n          padding: '0.75rem 1.5rem', \n          borderRadius: '0.25rem', \n          marginTop: '2rem', \n          cursor: 'pointer' \n        }}\n        onClick={() => window.history.back()}\n      >\n        Volver atr√°s\n      </button>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { useContext, useEffect } from 'react'\n\nimport {Routes, Route,useNavigate} from 'react-router-dom';\n\nimport LoginComponent from \"../Login\"\nimport SignupComponent from \"../Signup\"\nimport MonthMetricsComponent from '../MonthMetrics'\nimport DataPage from \"../DataPage/DataPage\"\n\nimport { SessionContext } from '../../contexts/Session';\n\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nimport { Row} from \"reactstrap\"\nimport NotFoundPage from '../Common/NotFoundPage';\n\nconst MainLayout = (props) => {\n\n    const {login} = useContext(SessionContext)   \n    const auth = getAuth();\n    const navigate = useNavigate();\n    \n    useEffect(()=>{\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n              // User is signed in, see docs for a list of available properties\n              // https://firebase.google.com/docs/reference/js/firebase.User\n              login(user);\n            } else {\n              // User is signed out\n              // ...\n              console.log(\"user is logged out\")\n              //navigate(\"/login\")\n            }\n          });\n         \n    }, [])\n\n    return (\n        \n            <Routes>\n                <Route path=\"/\" element={\n                    <>\n                        <Row>\n                            <MonthMetricsComponent metricsOpen={props.metricsOpen}/>\n                        </Row>\n                        <Row>\n                            <DataPage/>\n                        </Row>\n                    </>\n                    \n                }/>  \n                <Route path=\"/signup\" element={<SignupComponent/>}/>\n                <Route path=\"/login\" element={<LoginComponent/>}/> \n                <Route path='*' element={<NotFoundPage />}/> \n            </Routes>  \n  )\n}\n\nexport default MainLayout","import { DateProvider } from \"./contexts/Date\"\nimport React, { useState } from \"react\"\nimport { Container, Row} from \"reactstrap\"\n\nimport { BrowserRouter as Router} from 'react-router-dom';\n\n\nimport NavBarComponent from './Components/Common/Navbar'\nimport Footer from \"./Components/Common/Footer\"\n\nimport CreditCardForm from \"./Components/creditCards/CreditCardForm\"\n\n\nimport { SessionProvider } from \"./contexts/Session\"\nimport MainLayout from \"./Components/MainLayout/MainLayout\"\n\nfunction App() {\n\n    \n    const [creditCardModalOpen, setcreditCardModalOpen] = useState(false);\n    const [metricsOpen, setMetricsOpen] = useState(true);\n\n    const toogleMetrics = () => {\n        setMetricsOpen(!metricsOpen);\n    }\n\n    const toogleCreditCardModal = () => {\n        setcreditCardModalOpen(!creditCardModalOpen);\n    }\n\n    return (\n        <div>\n            <section>                                                                                                       \n                <DateProvider>\n                    <SessionProvider>\n                        <div className=\"App\">\n                            <Container fluid={true}>\n                                <Row>\n                                    <NavBarComponent \n                                        toogleMetrics={toogleMetrics} \n                                        metricsOpen={metricsOpen}\n                                        toogleCreditCardModal={toogleCreditCardModal}\n                                    />\n                                </Row>\n                                    <Router>\n                                        <MainLayout metricsOpen={metricsOpen}/>\n                                    </Router>\n                                <Row>\n                                    <Footer />\n                                </Row>\n                            </Container>\n                            <CreditCardForm creditCardModalOpen={creditCardModalOpen} toogleCreditCardModal={toogleCreditCardModal} />\n                        </div>\n                    </SessionProvider>\n                </DateProvider>           \n            </section>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}